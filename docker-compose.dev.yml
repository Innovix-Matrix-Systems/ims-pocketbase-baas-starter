services:
  pocketbase:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8090:8090"
    volumes:
      - .:/app
      - pb_data:/app/pb_data
      - go_cache:/go/pkg/mod
    env_file:
      - .env
    depends_on:
      - mailhog
    networks:
      - app-network
    environment:
      - GOOS=linux
      - GOARCH=amd64
      - CGO_ENABLED=0

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - app-network

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/local/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   networks:
  #     - app-network

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/local/grafana/provisioning:/etc/grafana/provisioning
  #     - ./monitoring/local/grafana/dashboards:/var/lib/grafana/dashboards
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   networks:
  #     - app-network

volumes:
  pb_data:
  go_cache:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge
